[
    {
        "title": "【结贴】在2017的早春，她想找到余生结伴的你|帮96年闺蜜征友",
        "author": "lldxya",
        "link": "https://bbs.byr.cn/article/Friends/1800011",
        "pubDate": "Sun, 02 Apr 2017 11:18:55 GMT",
        "description": "发信人: lldxya (ccsa), 信区: Friends<br/>标题: 【结贴】在2017的早春，她想找到余生结伴的你|帮96年闺蜜征友<br/>发信站: 北邮人论坛 (Sun Apr2 00:33:05 2017), 站内<br/><br/><b>结贴啦</b><br/>大家太给力了，闺蜜邮箱快炸了～<br/>谢谢各位亲友团、楼里的各位兄弟姐妹帮顶～祝大家学业有成，一切顺利～<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>--<br/>[upload=1][/upload]<br/>※ 修改:·lldxya 于 Apr2 15:06:31 2017 修改本文·[FROM: 10.204.34.*]<br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 10.204.34.*]<br/>"
    },
    {
        "title": "学渣纠结两个offer中。。。",
        "author": "woogle",
        "link": "https://bbs.byr.cn/article/Job/1881187",
        "pubDate": "Sun, 02 Apr 2017 11:11:39 GMT",
        "description": "发信人: woogle (woogle), 信区: Job<br/>标题: 学渣纠结两个offer中。。。<br/>发信站: 北邮人论坛 (Sat Apr1 23:27:59 2017), 站内<br/><br/>应届本科生一名，在纠结两个offer:<br/>1:税前8000，有5险1金；创业小公司，创建一年多，搞机器学习互联网安全方面的，做出了自己的产品，公司规模30人左右；公司前景未知，离家距离：车程1个小时45分钟，周六上班，平时加班多<br/>2:税前9000＋，有5险1金；比较大一些的公司，还有运动健身场所，给银行做研发，公司比较稳定，公司规模:200人＋200外包；离家距离：30分钟…加班少<br/><br/>福利待遇2肯定比1强不少，纠结点是因为很多人说技术人员在银行系统中地位比较低，发展前景不好；另外在小公司更能够接触到很核心的业务，学到的东西会很多，当然比较累一些…<br/>最近一直比较纠结~<br/><br/>--<br/><br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 119.90.25.*]<br/>"
    },
    {
        "title": "纯讨论 舍友说初恋一般都走不到最后",
        "author": "guqingyi",
        "link": "https://bbs.byr.cn/article/Talking/5900124",
        "pubDate": "Sun, 02 Apr 2017 11:16:09 GMT",
        "description": "发信人: guqingyi (顾青弋), 信区: Talking<br/>标题: 纯讨论 舍友说初恋一般都走不到最后<br/>发信站: 北邮人论坛 (Sat Apr1 23:20:21 2017), 站内<br/><br/>舍友说初恋一般都走不到最后 你们怎么看<br/>--<br/><br/>※ 来源:·<a target=\"_blank\" href=\"http://developers.byr.cn/mobile\">北邮人论坛手机客户端</a> bbs.byr.cn·[FROM: 10.21.163.*]<br/>"
    },
    {
        "title": "【心得】【长文慎入】电子院妹子跨考清华CS攻城记",
        "author": "lavender730",
        "link": "https://bbs.byr.cn/article/AimGraduate/1103749",
        "pubDate": "Sun, 02 Apr 2017 11:27:23 GMT",
        "description": "发信人: lavender730 (lavender_j), 信区: AimGraduate<br/>标题: 【心得】【长文慎入】电子院妹子跨考清华CS攻城记<br/>发信站: 北邮人论坛 (Sat Apr1 22:59:54 2017), 站内<br/><br/><br/>写在前面的话:最近看到论坛中有学弟学妹问一些跨考的经验。虽觉自己一路走来谈不上什么经验，经历种种还是可以诉于笔下一二。如果让各位有所收获，那更是荣幸之至。<br/><font size=\"4\"><font face=\"黑体\">第一章:知己知彼 百战不殆</font></font><br/><br/><b>先说说清华计算机系考研的情况吧。</b><br/><br/>其实王道论坛的帖子说得挺多，仅供大家参考：<a target=\"_blank\" href=\"http://www.cskaoyan.com/thread-174799-1-1.html\">http://www.cskaoyan.com/thread-174799-1-1.html</a><br/><b>报考情况：</b>清华计算机系学硕有三个方向：计算机应用技术，计算机软件与理论，计算机系统结构。专硕就只有计算机技术。其实这个具体的方向还得看自己的老师主要做那些方面。选方向主要是选自己复试时候笔试的加试的专业课，具体需要加试专业课的可以去清华的研究生招生网去看招生简章。专硕学硕的专业课都是考清华自主命题的912计算机基础综合。<br/>初试成绩出来之后，清华会划一个校线，学院会划一个学硕线X，一个专硕线Y。<br/>如果你的分数为 a,并且单科过线。如果单科不过线也不能参加复试。<br/>if(a&gt;=X &amp;&amp;报考的是学硕)<br/>参加学硕的面试；<br/>else if((a&lt;X &amp;&amp; a&gt;=Y &amp;&amp; 报考学硕 )||(a&gt;=Y &amp;&amp; 报考专硕)）<br/>参加专硕的面试；<br/>else<br/>不能参加复试；<br/>机试和笔试是大家一起参加的。只是面试分学硕和专硕面试。学硕面试完之后，学校会出一个学硕不通过名单，面学硕不通过的同学可以参加专硕的面试。专硕面完的当天晚上，就会出一个<b>计算机系统考硕士不录取名单</b>，出现在名单上的同学就是落选了，可以校内找一下调剂。所以大家基本都是报学硕。至于学硕和专硕有什么区别，王道论坛里面的一些帖子说得挺透彻的。有兴趣的同学可以去翻一下帖子。这里就不详细展开了。<br/><br/><b>录取情况：</b>去年学硕/专硕分数线为 345/320 ，录取了学硕20人，专硕26人。今年的学硕/专硕分数线为360/335,进入复试的同学一共54人，具体的拟录取名单还没出来，不过通过面试人数和不录取人数推算，应该是学硕 13人，专硕24人。大概按照1:1.5的比率划复试线。<br/><br/><b>考试情况：</b>初试500分，复试笔试100分，机试100分，面试300分，一共1000分。最后通过排名来录取。<br/><b>初试专业课912:</b>考察数据结构（70分），计组（30分），操作系统（30分），计网（20分）。我们是第二年自主命题，有的参考资料就只有2016年考研的回忆版，和早年的一些清华自己命题的专业课的回忆版。几乎是没有答案的，都只是学长学姐们口耳相传的回忆。并且没有参考书目没有考试范围，需要准备的东西很多。去年的题目比较容易，今年的题目就很难。今年题目计算量大，题目量多，考察知识点很广（毕竟没有考纲的限制），王道的清华版面有今年的回忆，感觉还是挺全的，大家可以拿来参考。今年大家专业课的分数都集中在80~100之间吧，100+就是大牛级别的。<br/><br/><b>复试机试：</b>3题4个小时，每个题有10个或者20个测试点吧，按测试点给分。没有水题，要A一题也并不容易。不知道大家的分数，好吧，连我自己的分数也不知道。具体的题目在文末讨论吧。<br/><br/><b>复试笔试：</b>我报的是软件与理论，复试笔试是考原报的科目，编译原理5个大题，数据库5个简答题，因为题目少，回忆得还是挺全的，可以去王道论坛清华板块自己搜寻，不过这部分可以等到初试结束后才复习。面试分为综合面试：是学长面的英文自我介绍/对话3分钟，然后中文对话就问你一些大学学习生活，社交活动之类的问题。专业面试是十个教授左右吧，准备10多份简历，老老实实回答老师的问题即可。<br/><br/><b>再介绍一下楼主本身的情况吧。</b><br/>楼主是电子院的光电专业，初试成绩 政治59，英语73，数学136，专业课80，总分 348。复试成绩未知，不录取名单上没有我的名字，参加的是专硕的面试。本来想等拟录取名单出来再正儿八经地发帖，不过在今天这一个特殊的日子，把自己的经历写上来也很有意义。<br/>大一专业排名37，大二大三专业15名，三年总排名专业19，我们专业保研了17位同学。计算机专业选修除了java其他都选了，平时和编程有关的实验都比较上心。计算机的课程分数也相对于其他科目分数会高一些。三年来学习比较勤恳认真，但是也说不上特别优秀，没有竞赛加分的经历，负责过大创。<br/><br/><font face=\"黑体\"><font size=\"4\">第二章 士之将行，顾之则罔</font></font><br/><br/><b>复习大概分为3段：前期是：3月中到6月底，过渡是暑假的7,8月，9月到12月就是后期。</b><br/><b>3月中到6月底。</b>当时选修了7门课，准备6级，还有大创的一些结尾工作。但是要尽量抽时间出来，做一些前期的准备工作。这段时间我主要完成的<b>有背完考研的单词</b>，在计蒜客上<b>学习数据结构的课程</b>（现在不知道还有么）；看了一些<b>线性代数（有名的MIT的线性代数课程</b>）的视频8/35，感觉看了这个视频对线性代数有比以前更深刻的理解。<b>选修了计算机网络，</b>考研专业课之一。必修课微机原理中<b>学习了汇编语言</b>，用汇编写了课后题，一个简易的成绩管理系统（面试的时候，这个经历也是可以写的）；在此过程中学习一些计组的知识。<br/>期末考试完，6月底就正式开始了。<br/><b>数学：</b><br/>7月前半个月+之前零碎的时间把高数上的除了微分方程的课后题写了一下，7月15号左右，开始看全书。<br/>9月初：完成全书的高数和概率第一遍。再花了一个多星期把李永乐线性代数讲义刷完。开始写数学真题，从87年的开始。大概3天一套，这个时候还是写得还是有点痛苦的。需要通过真题去学习，哪里不会看哪里。同时看完张宇的概率论强化班视频（记笔记），结合着张宇的概率论9讲来看，当然也写上面的练习题啦。<br/>10月开始看全书第二遍，写了5套真题。也去看了部分张宇高数的强化班，记笔记。<br/>11月基本把全书第二遍看完，然后复习李永乐的线性代数讲义，然后写了4,5套真题吧。同时还针对自己薄弱环节，利用张宇1000题里面的题目进行训练，有时写一些660里面的小题。还有张宇《8套卷》3套吧。<br/>11月底，从2016年往前写，保证写过的题目都很熟练，然后再用660提高自己小题的正确率。<br/>12月中旬，写了一下《4套卷》的第一套。考试的前一个星期，就把之前写过的题目又拿出来写。<br/>我买一包A4纸，每张卷子拿两三张A4纸当答题纸，大题工整地把过程写下来。当训练解题速度时，计时答题；当训练自己正确率时，不计时答题，但是要保证自己会做的基本不错。<br/>使用资料：<b>《复习全书》，《660》，《题源1000》，《概率论9讲》，《线性代数讲义》，《真题大全解》，《4套卷》，《8套卷》。</b><br/><b>专业课：</b><br/>7月看了白中英版计组的教材，在学堂在线上看清华大学的操作系统的课程。<br/>8月看殷人昆版数据结构的课本（清华大学出版社），写课本后面的部分课后题。<br/>9月初，写王道单科书。下载考研帮app，买了里面计算机的题目，经常拿来刷题。<br/>10月中旬左右，把4本王道单科书基本都写完了，有些比较难的题目我就跳过了，后面再回头看。<br/>10月中旬到11月底，我完成的事大概有，学习学堂在线邓俊辉老师的数据结构课程，哈工大的计组的公开课（较薄弱的部分），复习王道单科书上的题目，继续写殷人昆数据结构的课后题和加的清华考研群里同学分享的早年的清华自主命题的专业课，写了4套王道的最后8套题。<br/>12月初到12月中旬，几乎放弃了英语和政治，数学有时会压缩到1个小时，全力复习专业课。最后两个星期：复习做过的题目，记背对应的知识点，查缺补漏。<br/>使用资料：<b>白中英版计组的教材+课后答案</b>，<b>殷人昆版数据结构的课本+答案</b>，<b>邓俊辉版数据结构课本</b>（对照频看）和对应的习题（翻阅过，没有认真写）；<b>王道单科书4本</b>，<b>王道最后8套题</b>，考研帮APP，考研群中大家分享的资料（里面有一些清华本科的课件，往年的题目）。<br/><br/> 下面这些书，不算在自己的学习计划中，没有看完，有的是图书馆借的，有的是问同学借的，都没有买。<br/> <b>操作系统概念（第七版）</b>Silberschatz、Galvin和Gagne著、郑扣根译；高等教育出版社2010年（翻阅过部分，对照着学堂在线的视频来看）；<br/> <b>Computer Organization &amp; Design The hardware/software interface </b>第4版机械工业出版社（计组方面，有中文版）；<br/> <b>A.S Tanebaum, Computer Networks，4/5nd Edition, Prentice Hall, 2003/2011</b> 计算机网络方面也是中文版，是一本很厚的黑皮书。只看了考试内容的部分吧也没有看完；<br/> <b>谢希仁版计算机网络</b>，第六版绿色的，我们上课用的课本。<br/><b>英语：</b><br/> 就是写真题，做笔记。我真题没有写完，最后分数也不高，感觉没什么好说的。不过暑假写真题错7,8个，后面背了4,5篇阅读，正确率就提高到错3,4个了，我感觉背阅读还是有奇效的。<br/>最后12月讲道理应该每天写作文的，我也没有写，最后作文估计很惨就对了。虽然背了一些作文，无奈作文功底太差，也没有背得熟练。最后对答案的时候，我的客观题扣了10分，这样算起来主观扣了17分。。。<br/>感受有三：<b>英语基础很重要，有时间可以背阅读，12月要写作文。</b><br/><b>政治：</b><br/> 9月中旬开始看，考前一天才把4套卷的选择题写完。。。<br/> 后面的时间应该给政治的，可是放在专业课上感觉也挺值的，专业课最后考80分，刚刚好过线。如果考79就不能进复试了~<br/><br/><font size=\"4\"><font face=\"黑体\">第三章:锲而不舍 金石可镂</font></font><br/><br/> 初试完成后，尽量早点复习吧。机试很重要，如果机试写得好，老师会觉得你实践动手能力很强。对于跨考生来说的机试的目标是达到平均水平。我是在zerojudge（<a target=\"_blank\" href=\"https://zerojudge.tw\">https://zerojudge.tw</a>）上练习，这个oj服务器速度挺快的，对新手比较友好。大家可以做上面收录的国内正式比赛的题目，这样网上的题解资源很多，方便自己学习。<br/> 机试有三题：<br/> <b>第一题</b>的题目是给定n个数，询问最少选取前p个数，使得这p个数中可以选择m个数，这m个数最大最小值差距不大于k。数据范围n,m是 10^5,身高&lt;=200。时间限制是1s，现场的时候比较紧张，而且第一题就有点难度，只想出O(n^2)的做法，排序直接用的是STL sort函数，大概只能得60分吧。其实这题满足二分的做法，对选取的长度进行二分，排序也可以写成桶排序（身高&lt;=200）,最快可以达到nlogn的做法。<br/> <b>第二题</b>是模拟扫雷，就是根据题目要求完成各种操作，训练自己写程序的时候，为了最快熟悉算法，放弃了搜索和模拟部分，最后写这题，所以这道题把代码写出来之后只剩半个小时，机试的机子调试部分我不太熟悉，最后已经发现自己错误的部分了，可是来不及改了，代码也没有提交上。<br/> <b>第三题</b>：式子如下，<br/> f(x) = ∑ bi * x^i(i从0到m) bi是给定的系数<br/> g(n) = ∑(a^k) * f(k) (k从0到n)<br/>就是给定 n,m,a，求出 g(n)的值对1000000007取模。20%数据 n&lt;=1000,100%数据n&lt;=109,m&lt;=100。时间限制1s。<br/> <br/>这题现场我只做出前20%的数据，当时是用快速幂来做。很多人觉得是数论，其实分析式子之后，可以发现可以用矩阵乘法，计算矩阵乘法也可以用快速幂的思想，复杂度大概是 m3*logn。<br/>好吧，说到这里该说也说得差不多了。如有疏漏，也请指正。老学姐真的写不动了，以后有机会再更新吧。<br/>--<br/><br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 10.213.1.*]<br/>"
    },
    {
        "title": "金牛座坐在这。",
        "author": "shiyige666",
        "link": "https://bbs.byr.cn/article/Constellations/494756",
        "pubDate": "Sun, 02 Apr 2017 10:33:46 GMT",
        "description": "发信人: shiyige666 (shiyige666), 信区: Constellations<br/>标题: 金牛座坐在这。<br/>发信站: 北邮人论坛 (Fri Mar 31 22:06:33 2017), 站内<br/><br/><br/>--<br/><br/>※ 来源:·<a target=\"_blank\" href=\"http://developers.byr.cn/mobile\">北邮人论坛手机客户端</a> bbs.byr.cn·[FROM: 10.28.117.*]<br/>"
    },
    {
        "title": "最怕空气突然的安静",
        "author": "tinyCoder",
        "link": "https://bbs.byr.cn/article/Feeling/2975797",
        "pubDate": "Sun, 02 Apr 2017 08:02:56 GMT",
        "description": "发信人: tinyCoder (这就是小号), 信区: Feeling<br/>标题: 最怕空气突然的安静<br/>发信站: 北邮人论坛 (Sun Apr2 00:21:37 2017), 站内<br/><br/>今早送完师兄 回来后发现实验室只有我们研二的三个人<br/>一股冷清在平日里熙熙攘攘的大屋子里弥散开来<br/>翻书声中不时夹杂着隔壁老师的几声咳嗽<br/>在群里留言 也只有些有句没句的回复<br/>阳光虽好 但却少了很多温暖的气息<br/><br/>看着学长学姐们远去 <br/>想说声 “有空来找你玩”又觉得好似在许一个遥遥无期的诺言<br/>只能在手机屏幕里打下几句“一路顺风”<br/>记忆拉回最初相识的时候 <br/>仿佛还能看到那时的大家挂在脸上的笑容<br/>时间好似未曾走动 却深知那已其年<br/><br/>晚上在和哥们开黑的时候 <br/>总感觉少了什么<br/><br/>才发现<br/>少了那个带头gank 要教对面做人的二哥 <br/>缺了那个刷光野区带崩三路的通哥<br/>也没了那个常来观战的浪神<br/><br/>还好我们<br/>有赢一把就睡的通宵<br/>有吹逼喝酒赏月的日子<br/>有争来辩去的观点<br/>有你搀我扶翻窗的夜晚<br/>有互助写论文的时光<br/><br/>还好有你们 青春不荒废<br/><br/>大家，一路顺风啊！<br/><br/><br/>--<br/>※ 修改:·tinyCoder 于 Apr2 00:38:20 2017 修改本文·[FROM: 223.104.38.*]<br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 10.205.34.*]<br/>"
    },
    {
        "title": "研究生补助我们学校会提高吗？",
        "author": "tqaw",
        "link": "https://bbs.byr.cn/article/Picture/3174981",
        "pubDate": "Sun, 02 Apr 2017 10:33:35 GMT",
        "description": "发信人: tqaw (爱看卡通), 信区: Picture<br/>标题: 研究生补助我们学校会提高吗？<br/>发信站: 北邮人论坛 (Sun Apr2 00:09:08 2017), 站内<br/><br/>看到蛋蛋网推送说清华，北师研究生补助都提高了很多，我邮什么时候可以跟上节奏啊<img src=\"/img/ubb/ema/0.gif\" alt=\"ema0\" style=\"display:inline;border-style:none\"/><br/><br/><a target=\"_blank\" href=\"http://guiyou.wangx.in\">发自「贵邮」</a><br/>--<br/><br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 10.206.5.*]<br/><br/><br /><a target=\"_blank\" href=\"/att/Picture/3174981/343\"><img border=\"0\" title=\"photo_1491062948_1.jpg\" src=\"/att/Picture/3174981/343\" alt=\"photo_1491062948_1.jpg\" class=\"resizeable\" /></a><br /><a target=\"_blank\" href=\"/att/Picture/3174981/85527\"><img border=\"0\" title=\"photo_1491062948_2.jpg\" src=\"/att/Picture/3174981/85527\" alt=\"photo_1491062948_2.jpg\" class=\"resizeable\" /></a>"
    },
    {
        "title": "面试经验总结",
        "author": "dss886",
        "link": "https://bbs.byr.cn/article/MobileTerminalAT/33010",
        "pubDate": "Sun, 02 Apr 2017 09:14:09 GMT",
        "description": "发信人: dss886 (「信意涵，得offer」), 信区: MobileTerminalAT<br/>标题: 面试经验总结<br/>发信站: 北邮人论坛 (Fri Mar 31 22:42:49 2017), 站内<br/><br/>迟来的面试经验总结...<br/>毕业手续都忙完了，又到了下一届学弟学妹们找工作的时间，<br/>正好把去年的面经总结一下，希望能帮到学弟学妹们~<br/><br/>虽然是面向Android开发，但也有一部分计算机基础和Java语言的内容<br/><br/><b>第一部分：计算机基础</b><br/><br/>一、ICMP协议是什么<br/>1. ICMP协议全称Internet Control Message Protocol，即Internet控制报文协议。<br/>2. 是TCP/IP协议的一个子族，网络层。<br/>3. 用于在计算机、路由器之间传递控制消息，如网络通不通、主机是否可达、路由是否可用等等。<br/>4. ping命令即基于ICMP协议。<br/>5. 路由跟踪的Tracert等命令也基于ICMP<br/><br/>二、DNS协议是什么<br/>1. DNS全称Domain Name System，即域名系统，一个用于映射域名和IP地址的分布式系统。<br/>2. DNS请求使用UDP协议，但本身属于应用层协议。<br/><br/>三、堆和栈的区别<br/>1. 堆和栈在数据结构和编程语言实现里的意思不一样。<br/>2. 作为数据结构，栈是后入先出的线性结构；堆是一个树，父节点总是大于（或者总是小于）子节点，用于实现优先队列。<br/>3. 但在编程语言实现、运行时环境、虚拟机的语境下，栈（调用栈）是维护嵌套函数调用状态的结构，主要是保存局部变量的值和返回地址；堆是动态内存分配的空间，生存期超出函数的范围，结构根据具体的分配算法以及垃圾回收算法而不同。<br/><br/>四、TCP和UDP的区别<br/>1. TCP是传输控制协议，面向字节流，提供拥塞控制功能；UDP是用户数据报协议，面向报文，尽最大努力交付数据；<br/>2. TCP是面向连接的协议，UDP是面向非连接的协议。<br/>3. TCP是传输可靠型协议，UDP是传输不可靠型协议。<br/>4. TCP的速度较慢，UDP的速度较快。<br/><br/>五、TCP拥塞控制逻辑<br/>1. 主要由拥塞窗口cwnd实现，具体逻辑主要包括慢启动、快速重传和快速恢复等。<br/>2. 慢启动：窗口一开始很小（一般为1）但是很快地（指数级）增长上来，直到达到慢启动门限。<br/>3. 快速重传：TCP利用3个相同的ACK来判定数据包丢失，开始快去重传<br/>4. 快速启动：重传后的慢启动<br/><br/>六、TCP为什么断开连接要四次握手？<br/>1. TCP是全双工的，每一个方向都必须单独进行开关，所以需要四次握手。而建立连接时发起者A的两个方向是默认打开的，B可以省去一个通知A打开的请求，所以只需要三次握手。<br/><br/><b>第二部分：Java基础</b><br/><br/>一、HashMap和HashTable的区别<br/>1. HashMap是线程不安全的，HashTable是线程安全的，所以HashTable通常要比HashMap慢。<br/>2. HashMap的迭代器是fast-fail的，即当迭代时HashMap的结构被改变了，会抛出ConcurrentModificationException，而HashTable则不会。<br/>3. HashMap不保证随着时间的推移Map中元素的次序是不变的。<br/>4. HashMap的主键可以为null。<br/><br/>二、SoftReference和WeakReference的区别<br/>1. SoftReference只有当JVM即将OutOfMemory时才会被回收。<br/>2. WeakReference只要GC就会被回收。<br/><br/>三、HashMap冲突后的处理方法<br/>1. 开放地址法：又称再散列法，如果散列值p1冲突了，则基于p1再生成另一个地址p2，以此类推；常用再散列函数如线性探测、二次探测和伪随机数序列等。<br/>2. 链地址法：Java8中一个链长度超过8会转化为红黑树，减少查找时间。<br/><br/>四、equal()方法重写时要注意的点<br/>3. 判断对象非空<br/>4. 自反性、对称性、传递性、一致性<br/><br/>五、new String()<br/><br /><a target=\"_blank\" href=\"/att/MobileTerminalAT/33010/11317\"><img border=\"0\" title=\"1.JPG\" src=\"/att/MobileTerminalAT/33010/11317\" alt=\"1.JPG\" class=\"resizeable\" /></a><br/>1. 输出为：true，false<br/>2. String是final类，编译期指定的字符串会指向字符串池中的对象。<br/>3. 运行时生成的String类会先在heap中建立一个对象，同时去字符串池中寻找这个字符串，如果没有则创建一个。<br/><br/>六、Java优先级队列的实现原理<br/>1. PriorityQueue使用优先级堆实现<br/>2. 使用堆排序算法进行快速调整<br/><br/>七、Java虚拟机GC的原理<br/>1. JVM的GC采用根搜索算法。<br/>2. GC Roots一般有四种：栈帧的本地变量表中引用的对象，方法区中的静态成员，方法区中的常量引用的对象（final全局变量），本地方法栈JNI方法引用的对象。<br/>3. 现代GC回收算法主要有三种：标记-清除算法，复制算法和标记-整理算法。<br/>4. 标记清除算法缺点是效率比较低，容易出现内存碎片，一般很少用到。<br/>5. 复制算法缺点是浪费内存多，不适用于大对象和存活时间长的对象，一般用于新生代对象的GC。<br/>6. 标记整理算法克服了内存碎片，但缺点仍是效率不高，一般用于老年代对象的GC。<br/>7. HotSpot虚拟机默认Eden和Survivor的比例是8比1，老年代使用标记整理算法，新生代使用复制算法。<br/>8. Survivor空间不够时大对象会直接进入老年代。<br/>9. 当一个对象不可达时会调用finalize()方法，但是仅调用一次。<br/><br/>八、Java堆和栈的区别<br/><br /><a target=\"_blank\" href=\"/att/MobileTerminalAT/33010/114914\"><img border=\"0\" title=\"2.JPG\" src=\"/att/MobileTerminalAT/33010/114914\" alt=\"2.JPG\" class=\"resizeable\" /></a><br/>1. 所有对象实例都是在Java堆上分配内存<br/>2. 方法区用于存放ClassLoader加载的类的相关信息，包括类、静态变量和常量，String常量池也在方法区内。<br/>3. Java栈存放方法调用时的局部变量、方法操作、方法出口与方法执行的相关信息，无限递归调用会撑爆Java栈。<br/><br/>九、Java三大特性<br/>1. 封装，继承，多态<br/><br/>十、Java的可变参数<br/>1. 适用于参数个数不确定，类型确定时。<br/>2. 只能出现在参数列表的最后。<br/>3. Java把可变参数当做数组处理。<br/><br/>十一、String为什么要设计成不变的<br/>1. 字符串不变时，字符串池才有可能实现，运行时能节约很多堆空间。<br/>2. 字符串不变，就不用考虑多线程同步问题，是线程安全的。<br/>3. 类加载器要用到字符串，字符串不变性提供了安全性，保证正确的类被加载。<br/>4. 字符串不变hashcode就能被缓存，作为HashMap的键要比其他对象速度快。<br/><br/>十二、如何理解String的不变性<br/>1. 所有在编译期间确定的字符串都会在常量池中。<br/>2. new String(\"xxx\")会在堆中创建对象。<br/>3. string.intern()会根据字符串内容去常量池中寻找并返回相同内容的字符串，如果没有则先创建。<br/><br/>十二、Java用擦除实现范型的原因<br/>1. 纯技术角度考虑，Java实现类似C++模板的范型是相当简单的，Java不仅在2014年的Poject Valhalla的Model1中实现过，在更早的1996年的实验语言Pizza中也实现过。<br/>2. Java强调二进制向后兼容性，即低版本编译器生成的class文件要能在高版本的JRE上运行。<br/>3. 要保持兼容性的情况下在没有范型的基础上实现范型有两种思路：一是需要范型的类型（主要是容器类Collections）原有的不变，然后平行地加一套范型版本；二是让所有需要范型的类型原地范型化。<br/>4. C#在1.1至1.2时选择了第一条路，Java在1.4至1.5时选择了第二条。<br/>5. 第一个原因是C#在1.1时代码并不多，整个体系都在微软的控制下，变更比较容易，而Java1.4时已经有大量生产代码用于生产环境，如果新功能需要做大量源码级的修改，会大大影响新功能的普及。<br/>6. 第二个原因是，Java1.1至1.2时推翻过一次容器类的设计（Vector、HashTable），如果再加一套范型化的容器类画面实在太美。<br/><br/>十三、如何定义一个Annotation<br/>1. public @interface CustomAnnotation{}<br/>2. 元注解Target、Retention、Documented、Inherited<br/>3. 域 public String name() dafault \"xx\";<br/><br/>十四、volatile关键字的作用<br/>1. volatile只能用来域变量上，作用是保证变量的可见性和读写操作的有序性。<br/>2. Java执行“int x = new Object()”时有三个步骤：1在栈帧中给x变量分配空间；2在堆中初始化Object；3将x指向Object。JVM不能保证其中2、3步的执行顺序，在多线程并发情况下x不为null时这个对象不一定初始化完成了，而volatile关键字正是用来保证这一点的，即读操作一定在写操作完成之后。<br/>3. volatile不是被设计用来多线程同步的，最常用的场景是懒加载双重检查的单例模式。<br/>4. 在JVM的实现中，volatile要比synchronized轻量，消耗资源更少。<br/><br/>十五、notify了一个锁，wait的地方一定会被唤醒继续执行吗？<br/>1. 如果只有一个线程在wait，那么是的。<br/>2. 如果有多个线程在同时wait同一个锁，那么唤醒哪一个线程与JVM的实现有关，不能保证某个线程一定会被唤醒。<br/><br/><b>第三部分：Android基础</b><br/><br/>一、触摸事件的分发<br/>1. 触摸事件的处理涉及三个方法：dispatchTouchEvent()、onInterceptEvent()、onTouchEvent()<br/>2. 从Activity的dispatch开始传递，如果没有拦截，则一直传递到子view。<br/>3. 如果子View没有消费事件，事件会向上传递，这时父Group才可以消费事件。<br/>4. 如果子View没有消费DOWN事件（没有返回 true），后续事件都不会再传递进来，直到下一次DOWN。<br/>5. OnTouchListener的处理优先级高于onTouchEvent()<br/><br/>二、Handler.postDelay()的原理<br/>1. <a target=\"_blank\" href=\"http://www.dss886.com/2016/08/17/01/\">Handler.postDelayed()精确延迟指定时间的原理</a><br/><br/>三、Fragment的生命周期<br/><br /><a target=\"_blank\" href=\"/att/MobileTerminalAT/33010/212114\"><img border=\"0\" title=\"3.JPG\" src=\"/att/MobileTerminalAT/33010/212114\" alt=\"3.JPG\" class=\"resizeable\" /></a><br/><br/>四、Gson的原理<br/>1. 如果使用默认的new Gson()对象，则采用反射来进行json的解析。<br/>2. 如果使用GsonBuilder来创建，并使用自定义的TypeAdapter，则会用自定义的TypeAdapter来解析json字符串。<br/><br/>五、Serializable和Parcelable的区别<br/>1. S是Java的序列化方案，P是Android的<br/>2. S在序列化的时候会产生大量的临时变量，导致频繁GC，P则不会。因此在内存中使用时（如网络中传递或进程间传递）推荐使用P。<br/>3. P被设计为IPC通信数据序列化方案，不适用于保存在磁盘上，此时应用S。<br/>4. S只需要继承Serializable接口即可，P则需要重写writeToParcel方法、重写describeContents方法、实例化Parcelable.Creator。<br/><br/>六、一个Activity启动另外一个Activity并返回的生命周期调用<br/>1. A.onCreate()<br/>2. A.onStart()<br/>3. A.onResume()<br/>4. 启动B<br/>5. A.onPause()<br/>6. B.onCreate()<br/>7. B.onStart()<br/>8. B.onResume()<br/>9. A.onStop()<br/>10. 返回A<br/>11. B.onPause()<br/>12. A.onRestart()<br/>13. A.onStart()<br/>14. A.onResume()<br/>15. B.onStop()<br/>16. B.onDestory()<br/><br/>七、startService和bindService的区别<br/>1. startService启动的Service在调用者自己退出而没有调用stopService时会继续在后台运行。<br/>2. bindService启动的Service生命周期会和调用者绑定，调用者退出时Service也会调用unBind()-&gt;onDestory()退出。<br/>3. 先调用startService再调用bindService时Service也只会走一遍生命周期。<br/>4. 除了startService和bindService，Service的生命周期只有三个方法：onCreate()、onStart()、onDestoty()。<br/><br/>八、如何监听ListView的item被回收了？<br/>1. AbsListView.setRecyclerListener()<br/>2. #onMovedToScrapHeap(View view)<br/>3. RecyclerView.setRecyclerListener()<br/>4. #onViewRecycled(ViewHolder holder)<br/><br/>九、什么是属性动画<br/>1. Android在3.0引入属性动画的原因是视图动画有两个无法克服的缺点：只能对View进行操作，只支持移动、缩放、旋转和淡入淡出。<br/>2. 属性动画不针对View来设计，实际上是一种不断地对值进行操作的机制。<br/>3. ValueAnimator是针对值来进行变更的动画，值可以是int或float或任意对象。如果是对象的话需要实现TypeEvaluator，int和float是可选的。<br/>4. ObjectAnimator继承ValueAnimator，可以对任意对象的任意属性执行变更动画，前提是属性有get和set方法。<br/><br/>十、Android系统是如何保证一个线程只有一个Looper的<br/>1. Looper.prepare()使用了ThreadLocal来保证一个线程只有一个Looper。<br/>2. ThreadLocal是Java1.5中提供的多线程保持对象的方法和避免参数传递路径过长的解决方案（注意它并不是被设计用于多线程通信或同步的）<br/><br/>十一、如何定义一个Gradle Task<br/>1. 定义Task类型：class HelloWorldTask extends DefaultTask{}<br/>2. @TaskAction用来标记这个task被执行时调用的方法：@TaskAction def hello {println \"Hello World\"}<br/>3. @Optional用来标记可选变量：@Optional String message = \"m\";<br/>4. 定义Task时即可指定Task类型，同时也可定义可选变量（如果有的话）：<br/>5. task hello(type: HelloWorldTask)<br/>6. task hello(type: HelloWorldTask){message = \"message\"}<br/><br/>十二、ListView的ViewType的限制<br/>1. 只能是数字<br/>2. 取值[0, getViewTypeCount() - 1]<br/>3. 见android.widget.Adapter类的getItemViewType()方法的注释<br/><br/>十三、什么是ViewStub<br/>1. ViewStub是一个轻量级的View，用于延迟加载布局和视图<br/>2. 它不可见时不占布局位置、所占资源非常少。当可见时或调用ViewStub.inflate时它所指向的布局才会初始化<br/>3. ViewStub只能被inflate一次<br/>4. ViewStub只能用来inflate一个布局，不能inflate一个具体的View<br/><br/>十四、SurfaceView的特点<br/>1. SurfaceView拥有独立的绘图表面，即它的UI可以在独立线程中绘制<br/>2. Android系统的UI由SurfaceFlinger服务负责绘制，每一个窗口有一个Layer用于描述它的绘图表面，所以可以实现独立于主线程进行绘制<br/><br/>十五、如何调试ANR<br/>1. DDMS输出的LOG可以判断ANR发生在哪个类，但无法确定在类中哪个位置<br/>2. 在/data/anr/traces.txt文件中保存了ANR发生时的代码调用栈，可以跟踪到发生ANR的所有代码段<br/>3. adb pull 来pull traces文件到电脑上<br/><br/>十六、Android程序方法数上限65535是怎么来的？<br/>1. 方法数超限后的错误发生在构建期<br/>2. Dex的文件定义中方法数的索引长度为32位（2^32=65536×65536），所以不是Dex文件格式的限制<br/>3. Dalvik虚拟机的指令集中，B类查询参数（@BBBB）的长度为16位，所以支持的最大方法数是65535<br/>4. 不仅包括方法数，还包括field数和class数，所以dx（class转dex的）工具会对其进行检查，超限就会报错<br/>5. ART虚拟机在安装应用时会自动将多个dex文件编译成一个.ota文件用于执行，所以理论上不存在方法数超限的问题<br/>6. 但是由于目前apk标准中仍然使用.dex作为可执行文件的格式，为保证向下兼容Dalvik，dx工具在构建时仍然会对方法数进行检查，与实际运行环境是Dalvik还是ART无关<br/><br/><br/>可能有所错漏，回复留言我及时修改~<br/><br/>最后，打个广告：<br/><br/>1. <a target=\"_blank\" href=\"http://app.dss886.com/byr/\">【北邮人论坛官方客户端 - 下载】</a><br/>2. <a target=\"_blank\" href=\"https://bbs.byr.cn/#!article/ParttimeJob/548700\">【内推】【今日头条】头条视频Android、后台、测试开发实习生</a><br/><br/><br/>--<br/>※ 修改:·dss886 于 Apr2 14:11:31 2017 修改本文·[FROM: 123.114.52.*]<br/>※ 来源:·北邮人论坛 <a target=\"_blank\" href=\"http://bbs.byr.cn\">http://bbs.byr.cn</a>·[FROM: 123.114.51.*]<br/>"
    },
    {
        "title": "大三的课程设计怎么做啊",
        "author": "lk51618805",
        "link": "https://bbs.byr.cn/article/StudyShare/175248",
        "pubDate": "Sun, 02 Apr 2017 10:08:15 GMT",
        "description": "发信人: lk51618805 (JiaLveaks), 信区: StudyShare<br/>标题: 大三的课程设计怎么做啊<br/>发信站: 北邮人论坛 (Sat Apr1 16:19:24 2017), 站内<br/><br/>一直在准备考研，不知道这个怎么做。<br/>--<br/><br/>※ 来源:·<a target=\"_blank\" href=\"http://developers.byr.cn/mobile\">北邮人论坛手机客户端</a> bbs.byr.cn·[FROM: 10.8.206.*]<br/>"
    },
    {
        "title": "第十一届北京邮电大学程序设计竞赛晋级名单",
        "author": "prospace",
        "link": "https://bbs.byr.cn/article/ACM%5FICPC/92725",
        "pubDate": "Sun, 02 Apr 2017 11:19:39 GMT",
        "description": ""
    }
]